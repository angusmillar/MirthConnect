<channel version="3.7.0">
  <id>b8506c3f-168a-4d79-8e81-4e1fdeca5e99</id>
  <nextMetaDataId>8</nextMetaDataId>
  <name>In-Test</name>
  <description></description>
  <revision>64</revision>
  <sourceConnector version="3.7.0">
    <metaDataId>0</metaDataId>
    <name>sourceConnector</name>
    <properties class="com.mirth.connect.connectors.tcp.TcpReceiverProperties" version="3.7.0">
      <pluginProperties/>
      <listenerConnectorProperties version="3.7.0">
        <host>0.0.0.0</host>
        <port>60610</port>
      </listenerConnectorProperties>
      <sourceConnectorProperties version="3.7.0">
        <responseVariable>Auto-generate (After source transformer)</responseVariable>
        <respondAfterProcessing>true</respondAfterProcessing>
        <processBatch>false</processBatch>
        <firstResponse>true</firstResponse>
        <processingThreads>1</processingThreads>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
        <queueBufferSize>1000</queueBufferSize>
      </sourceConnectorProperties>
      <transmissionModeProperties class="com.mirth.connect.plugins.mllpmode.MLLPModeProperties">
        <pluginPointName>MLLP</pluginPointName>
        <startOfMessageBytes>0B</startOfMessageBytes>
        <endOfMessageBytes>1C0D</endOfMessageBytes>
        <useMLLPv2>false</useMLLPv2>
        <ackBytes>06</ackBytes>
        <nackBytes>15</nackBytes>
        <maxRetries>2</maxRetries>
      </transmissionModeProperties>
      <serverMode>true</serverMode>
      <remoteAddress>127.0.0.1</remoteAddress>
      <remotePort>60610</remotePort>
      <overrideLocalBinding>false</overrideLocalBinding>
      <reconnectInterval>5000</reconnectInterval>
      <receiveTimeout>0</receiveTimeout>
      <bufferSize>65536</bufferSize>
      <maxConnections>10</maxConnections>
      <keepConnectionOpen>true</keepConnectionOpen>
      <dataTypeBinary>false</dataTypeBinary>
      <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
      <respondOnNewConnection>0</respondOnNewConnection>
      <responseAddress></responseAddress>
      <responsePort></responsePort>
    </properties>
    <transformer version="3.7.0">
      <elements/>
      <inboundTemplate encoding="base64">TVNIfF5+XCZ8U1VQRVItTElTXjIuMTYuODQwLjEuMTEzODgzLjE5LjFeSVNPfE5FSFRBUEFUSF40
MzIxXkFVU05BVEF8Umh1YmFyYi1FTVJeMi4xNi44NDAuMS4xMTM4ODMuMTkuNC4yXklTT3xORUhU
QUhPU1BeMi4xNi44NDAuMS4xMTM4ODMuMTkuNV5JU098MjAxNTA0MTAxMTIwKzEwMDB8fE9SVV5S
MDFeT1JVX1IwMXxQMDAwMDA1MTUwNDEwMjMzMTA3MHxQfDIuNHx8fEFMfE5FfEFVU3w4ODU5LzEK
UElEfDF8fDIxNDIzNjNeXl5ORUhUQUhPU1BeTVJ+NjE0MDUyMzA5NDFeXl5BVVNISUNeTUN+V0Ex
MjM0NTZCXl5eQVVTRFZBXkRWR344MDAzNjA4ODMzMzU3MzYxXl5eQVVTSElDXk5JfHxQYXRpZW50
U3VybmFtZU9uZV5GaXJzdG5hbWVPbmVeTWlkZGxlTmFtZU9uZV5TdWZpeE9uZV5QcmVmaXhPbmVe
Xkx+UGF0aWVudFN1cm5hbWVUd29eRmlyc3RuYW1lVHdvXk1pZGRsZU5hbWVUd29eU3VmaXhUd29e
UHJlZml4VHdvXl5NfHwxOTQ1MDYyNDEwMzF8TXx8fFVuaXQgMV4xMTEgTmVodGEgU3RyZWV0XkJy
aXNiYW5lXl40MDAwXkFVU15IflVuaXQgMl4yMjIgTmVodGFUd28gU3RyZWV0XkJyaXNiYW5lXl40
MDAwXkFVU15CfHxeUFJOXlBIXl5eXjkzMjM1NjE1fF5XUE5eQ1BeXl5eMDQxNDc3ODM0MQpQVjF8
MXxPfFdhcmQxXlJvb21FOF5CZWQxMF5ORUhUQUhPU1AmMi4xNi44NDAuMS4xMTM4ODMuMTkuNSZJ
U098fHx8QUJDQl5EckFTdXJuYW1lXkRyQXR0ZW5kaW5nXl5eRHJeXl5TVVBFUi1MSVN+MTIzNDU2
XkRyQVN1cm5hbWVeRHJBdHRlbmRpbmdeXl5Ecl5eXk5FSFRBSE9TUH4yMzA0MjI3Rl5EckFTdXJu
YW1lXkRyQXR0ZW5kaW5nXl5eRHJeXl5BVVNISUNQUnxISUpLXkRyQVN1cm5hbWVeRHJSZWZlcnJp
bmdeXl5Ecl5eXlNVUEVSLUxJU344NTg1OTVeRHJBU3VybmFtZV5EclJlZmVycmluZ15eXkRyXl5e
TkVIVEFIT1NQfjI5MjkwMTZGXkRyQVN1cm5hbWVeRHJSZWZlcnJpbmdeXl5Ecl5eXkFVU0hJQ1BS
Ck9SQ3xSRXwxMTIyMzNeUmh1YmFyYk9yZGVyc14yLjE2Ljg0MC4xLjExMzg4My4xOS40LjEuNV5J
U098MTVQMDAwMDA1LTEyMzQ1Nl5TVVBFUi1MSVNeMi4xNi44NDAuMS4xMTM4ODMuMTkuMS4yXklT
T3w0NDU1NjY3N15SaHViYXJiT3JkZXJzR3JvdXBJRF4yLjE2Ljg0MC4xLjExMzg4My4xOS40LjEu
NF5JU098Q018fHx8MjAxNTA0MTAwODAwKzEwMDB8fHxERlRSXkRyQlN1cm5hbWVeRHJPcmRlcmlu
Z15eXkRyXl5eU1VQRVItTElTfjk1ODY3OF5EckJTdXJuYW1lXkRyT3JkZXJpbmdeXl5Ecl5eXk5F
SFRBSE9TUH40MzIyNTgxQl5EckJTdXJuYW1lXkRyT3JkZXJpbmdeXl5Ecl5eXkFVU0hJQ1BSfjgw
MDM2MTQ4OTk5OTk5OTdeRHJCU3VybmFtZV5Eck9yZGVyaW5nXl5eRHJeXl5BVVNISUNeXl5eXk5Q
SXx8XldQTl5QSF5eXl4wODkzNDEyMDQxfDIwMTUwNDEwMDczMCsxMDAwCk9CUnwxfDExMjIzM15S
aHViYXJiT3JkZXJzXjIuMTYuODQwLjEuMTEzODgzLjE5LjQuMS41XklTT3wxNVAwMDAwMDUtMTIz
NDU2XlNVUEVSLUxJU14yLjE2Ljg0MC4xLjExMzg4My4xOS4xLjJeSVNPfDI2NjA0MDA3XkNvbXBs
ZXRlIGJsb29kIGNvdW50XlNDVF5GQkVeRnVsbCBCbG9vZCBDb3VudF5TVVBFUi1MSVN8fHwyMDE1
MDQxMDA5MzArMTAwMHx8fHx8fFBhdGllbnQgaGFzIGEgaGlzdG9yeSBvZiBzZXZlcmUgZ291dCBj
YXVzZWQgYnkgcmh1YmFyYi58MjAxNTA0MTAxMTAwKzEwMDB8fERGVFJeRHJCU3VybmFtZV5Eck9y
ZGVyaW5nXl5eRHJeXl5TVVBFUi1MSVN+OTU4Njc4XkRyQlN1cm5hbWVeRHJPcmRlcmluZ15eXkRy
Xl5eTkVIVEFIT1NQfjQzMjI1ODFCXkRyQlN1cm5hbWVeRHJPcmRlcmluZ15eXkRyXl5eQVVTSElD
UFJ+ODAwMzYxNDg5OTk5OTk5N15EckJTdXJuYW1lXkRyT3JkZXJpbmdeXl5Ecl5eXkFVU0hJQ15e
Xl5eTlBJfF5XUE5eUEheXl5eMDg5MzQxMjA0MXx8fENQPU4sRFI9NDMyMjU4MUJ8fDIwMTUwNDEw
MTExNSsxMDAwfHxITXxGfHxeXl4yMDE1MDQxMDA4MDArMTAwMF5eUlR8MjMwNDIyN0ZeRHJDb3B5
QVN1cm5hbWVeRHJDb3B5VG9BXl5eRHJeXl5BVVNISUNQUn4wODEzMjY2SF5EckNvcHlCU3VybmFt
ZV5EckNvcHlUb0JeXl5Ecl5eXkFVU0hJQ1BSfjQ2MjgzNjFCXkRyQ29weUNTdXJuYW1lXkRyQ29w
eVRvQ15eXkRyXl5eQVVTSElDUFJ8fHx8RFJQUklIJkRyU3VybmFtZSZQcmluY2lwYWxSZXN1bHRJ
bnRlcnByZXRlckhhZW0mJiZEUiYmJlNVUEVSLUxJUwpPQlh8MXxOTXw3MTgtN15IZW1vZ2xvYmlu
XkxOXkhCXkhhZW1vZ2xvYmluXk5FSFRBUEFUSHx8MTQ1fGcvTF5eSVNPK3wxMzAtMTgwfHx8fEZ8
fHwyMDE1MDQxMDA5MzArMTAwMHwiInxSTzU2XlN1cm5hbWVSZXNwb25zaWJsZU9ic2VydmVyXkdp
dmVubmFtZV5eXl5eXlNVUEVSLUxJUwpPQlh8MnxOTXw3ODktOF5Fcnl0aHJvY3l0ZXNeTE5eUkND
XlJlZCBDZWxsIENvdW50Xk5FSFRBUEFUSHx8NS4zMHx4MTBcU1wxMi9MXl5JU08rfDQuNTAtNi41
MHx8fHxGfHx8MjAxNTA0MTAwOTMwKzEwMDB8IiJ8Uk81Nl5TdXJuYW1lUmVzcG9uc2libGVPYnNl
cnZlcl5HaXZlbm5hbWVeXl5eXl5TVVBFUi1MSVMKT0JYfDN8Tk18NDU0NC0zXkhlbWF0b2NyaXRe
TE5eSENUXkhDVF5ORUhUQVBBVEh8fDAuNDN8TC9MXl5JU08rfDAuNDAtMC41NHx8fHxGfHx8MjAx
NTA0MTAwOTMwKzEwMDB8IiJ8Uk81Nl5TdXJuYW1lUmVzcG9uc2libGVPYnNlcnZlcl5HaXZlbm5h
bWVeXl5eXl5TVVBFUi1MSVMKT0JYfDR8Tk18Xl5eTUNWXk1DVl5ORUhUQVBBVEh8fDgxfGZMXl5J
U08rfDgwLTk2fHx8fEZ8fHwyMDE1MDQxMDA5MzArMTAwMHwiInxSTzU2XlN1cm5hbWVSZXNwb25z
aWJsZU9ic2VydmVyXkdpdmVubmFtZV5eXl5eXlNVUEVSLUxJUwpPQlh8NXxOTXxeXl5NQ0heTUNI
Xk5FSFRBUEFUSHx8MjcuNHxwZ15eSVNPK3wyNC4wLTMyLjB8fHx8Rnx8fDIwMTUwNDEwMDkzMCsx
MDAwfCIifFJPNTZeU3VybmFtZVJlc3BvbnNpYmxlT2JzZXJ2ZXJeR2l2ZW5uYW1lXl5eXl5eU1VQ
RVItTElTCk9CWHw2fE5NfF5eXk1DSENeTUNIQ15ORUhUQVBBVEh8fDMzOHxnL0xeXklTTyt8MzIw
LTM2MHx8fHxGfHx8MjAxNTA0MTAwOTMwKzEwMDB8IiJ8Uk81Nl5TdXJuYW1lUmVzcG9uc2libGVP
YnNlcnZlcl5HaXZlbm5hbWVeXl5eXl5TVVBFUi1MSVMKT0JYfDd8Tk18Xl5eUExBVF5QbGF0ZWxl
dF5ORUhUQVBBVEh8fDE5OHx4MTBcU1w5L0xeXklTTyt8MTUwLTQwMHx8fHxGfHx8MjAxNTA0MTAw
OTMwKzEwMDB8IiJ8Uk81Nl5TdXJuYW1lUmVzcG9uc2libGVPYnNlcnZlcl5HaXZlbm5hbWVeXl5e
Xl5TVVBFUi1MSVMKT0JYfDh8Tk18Xl5eV0NDXldoaXRlIENlbGwgQ291bnReTkVIVEFQQVRIfHwx
Mi4xfHgxMFxTXDkvTF5eSVNPK3w0LjAtMTEuMHxIfHx8Rnx8fDIwMTUwNDEwMDkzMCsxMDAwfCIi
fFJPNTZeU3VybmFtZVJlc3BvbnNpYmxlT2JzZXJ2ZXJeR2l2ZW5uYW1lXl5eXl5eU1VQRVItTElT
Ck9CWHw5fE5NfF5eXk5FVVRTXk5ldXRyb3BoaWxzXk5FSFRBUEFUSHx8OS4zfHgxMFxTXDkvTF5e
SVNPK3wyLjAtNy41fEh8fHxGfHx8MjAxNTA0MTAwOTMwKzEwMDB8IiJ8Uk81Nl5TdXJuYW1lUmVz
cG9uc2libGVPYnNlcnZlcl5HaXZlbm5hbWVeXl5eXl5TVVBFUi1MSVMKT0JYfDEwfE5NfF5eXkxZ
TVBIT1NeTHltcGhvY3l0ZXNeTkVIVEFQQVRIfHwyLjF8eDEwXFNcOS9MXl5JU08rfDEuMC00LjB8
fHx8Rnx8fDIwMTUwNDEwMDkzMCsxMDAwfCIifFJPNTZeU3VybmFtZVJlc3BvbnNpYmxlT2JzZXJ2
ZXJeR2l2ZW5uYW1lXl5eXl5eU1VQRVItTElTCk9CWHwxMXxOTXxeXl5NT05PU15Nb25vY3l0ZXNe
TkVIVEFQQVRIfHwwLjd8eDEwXFNcOS9MXl5JU08rfDAuMS0wLjh8fHx8Rnx8fDIwMTUwNDEwMDkz
MCsxMDAwfCIifFJPNTZeU3VybmFtZVJlc3BvbnNpYmxlT2JzZXJ2ZXJeR2l2ZW5uYW1lXl5eXl5e
U1VQRVItTElTCk9CWHwxMnxOTXxeXl5FT1NeRW9zaW5vcGhpbHNeTkVIVEFQQVRIfHwwLjB8eDEw
XFNcOS9MXl5JU08rfDAuMC0wLjR8fHx8Rnx8fDIwMTUwNDEwMDkzMCsxMDAwfCIifFJPNTZeU3Vy
bmFtZVJlc3BvbnNpYmxlT2JzZXJ2ZXJeR2l2ZW5uYW1lXl5eXl5eU1VQRVItTElTCk9CWHwxM3xO
TXxeXl5CQVNPU15CYXNvcGhpbHNeTkVIVEFQQVRIfHwwLjB8eDEwXFNcOS9MXl5JU08rfDAuMC0w
LjJ8fHx8Rnx8fDIwMTUwNDEwMDkzMCsxMDAwfCIifFJPNTZeU3VybmFtZVJlc3BvbnNpYmxlT2Jz
ZXJ2ZXJeR2l2ZW5uYW1lXl5eXl5eU1VQRVItTElT</inboundTemplate>
      <outboundTemplate encoding="base64"></outboundTemplate>
      <inboundDataType>HL7V2</inboundDataType>
      <outboundDataType>HL7V2</outboundDataType>
      <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.7.0">
        <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.7.0">
          <handleRepetitions>true</handleRepetitions>
          <handleSubcomponents>true</handleSubcomponents>
          <useStrictParser>false</useStrictParser>
          <useStrictValidation>false</useStrictValidation>
          <stripNamespaces>true</stripNamespaces>
          <segmentDelimiter>\r</segmentDelimiter>
          <convertLineBreaks>true</convertLineBreaks>
        </serializationProperties>
        <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.7.0">
          <useStrictParser>false</useStrictParser>
          <useStrictValidation>false</useStrictValidation>
          <segmentDelimiter>\r</segmentDelimiter>
        </deserializationProperties>
        <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.7.0">
          <splitType>MSH_Segment</splitType>
          <batchScript></batchScript>
        </batchProperties>
        <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.7.0">
          <segmentDelimiter>\r</segmentDelimiter>
          <successfulACKCode>AA</successfulACKCode>
          <successfulACKMessage></successfulACKMessage>
          <errorACKCode>AE</errorACKCode>
          <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
          <rejectedACKCode>AR</rejectedACKCode>
          <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
          <msh15ACKAccept>false</msh15ACKAccept>
          <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
        </responseGenerationProperties>
        <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.7.0">
          <successfulACKCode>AA,CA</successfulACKCode>
          <errorACKCode>AE,CE</errorACKCode>
          <rejectedACKCode>AR,CR</rejectedACKCode>
          <validateMessageControlId>true</validateMessageControlId>
          <originalMessageControlId>Destination_Encoded</originalMessageControlId>
          <originalIdMapVariable></originalIdMapVariable>
        </responseValidationProperties>
      </inboundProperties>
      <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.7.0">
        <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.7.0">
          <handleRepetitions>true</handleRepetitions>
          <handleSubcomponents>true</handleSubcomponents>
          <useStrictParser>false</useStrictParser>
          <useStrictValidation>false</useStrictValidation>
          <stripNamespaces>true</stripNamespaces>
          <segmentDelimiter>\r</segmentDelimiter>
          <convertLineBreaks>true</convertLineBreaks>
        </serializationProperties>
        <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.7.0">
          <useStrictParser>false</useStrictParser>
          <useStrictValidation>false</useStrictValidation>
          <segmentDelimiter>\r</segmentDelimiter>
        </deserializationProperties>
        <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.7.0">
          <splitType>MSH_Segment</splitType>
          <batchScript></batchScript>
        </batchProperties>
        <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.7.0">
          <segmentDelimiter>\r</segmentDelimiter>
          <successfulACKCode>AA</successfulACKCode>
          <successfulACKMessage></successfulACKMessage>
          <errorACKCode>AE</errorACKCode>
          <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
          <rejectedACKCode>AR</rejectedACKCode>
          <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
          <msh15ACKAccept>false</msh15ACKAccept>
          <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
        </responseGenerationProperties>
        <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.7.0">
          <successfulACKCode>AA,CA</successfulACKCode>
          <errorACKCode>AE,CE</errorACKCode>
          <rejectedACKCode>AR,CR</rejectedACKCode>
          <validateMessageControlId>true</validateMessageControlId>
          <originalMessageControlId>Destination_Encoded</originalMessageControlId>
          <originalIdMapVariable></originalIdMapVariable>
        </responseValidationProperties>
      </outboundProperties>
    </transformer>
    <filter version="3.7.0">
      <elements/>
    </filter>
    <transportName>TCP Listener</transportName>
    <mode>SOURCE</mode>
    <enabled>true</enabled>
    <waitForPrevious>true</waitForPrevious>
  </sourceConnector>
  <destinationConnectors>
    <connector version="3.7.0">
      <metaDataId>3</metaDataId>
      <name>Write to Text File</name>
      <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.7.0">
        <pluginProperties/>
        <destinationConnectorProperties version="3.7.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <scheme>FILE</scheme>
        <host>C:/Temp/Mirth/FileDrop</host>
        <outputPattern>${date.get(&apos;yyyy-M-d H.m.s&apos;)}.txt</outputPattern>
        <anonymous>true</anonymous>
        <username>anonymous</username>
        <password>anonymous</password>
        <timeout>10000</timeout>
        <keepConnectionOpen>true</keepConnectionOpen>
        <maxIdleTime>0</maxIdleTime>
        <secure>true</secure>
        <passive>true</passive>
        <validateConnection>true</validateConnection>
        <outputAppend>true</outputAppend>
        <errorOnExists>false</errorOnExists>
        <temporary>false</temporary>
        <binary>false</binary>
        <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
        <template>Message ID: ${message.messageId}</template>
      </properties>
      <transformer version="3.7.0">
        <elements/>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>HL7V2</inboundDataType>
        <outboundDataType>HL7V2</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.7.0">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.7.0">
            <handleRepetitions>true</handleRepetitions>
            <handleSubcomponents>true</handleSubcomponents>
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <stripNamespaces>true</stripNamespaces>
            <segmentDelimiter>\r</segmentDelimiter>
            <convertLineBreaks>true</convertLineBreaks>
          </serializationProperties>
          <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.7.0">
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <segmentDelimiter>\r</segmentDelimiter>
          </deserializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.7.0">
            <splitType>MSH_Segment</splitType>
            <batchScript></batchScript>
          </batchProperties>
          <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.7.0">
            <segmentDelimiter>\r</segmentDelimiter>
            <successfulACKCode>AA</successfulACKCode>
            <successfulACKMessage></successfulACKMessage>
            <errorACKCode>AE</errorACKCode>
            <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
            <rejectedACKCode>AR</rejectedACKCode>
            <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
            <msh15ACKAccept>false</msh15ACKAccept>
            <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
          </responseGenerationProperties>
          <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.7.0">
            <successfulACKCode>AA,CA</successfulACKCode>
            <errorACKCode>AE,CE</errorACKCode>
            <rejectedACKCode>AR,CR</rejectedACKCode>
            <validateMessageControlId>true</validateMessageControlId>
            <originalMessageControlId>Destination_Encoded</originalMessageControlId>
            <originalIdMapVariable></originalIdMapVariable>
          </responseValidationProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.7.0">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.7.0">
            <handleRepetitions>true</handleRepetitions>
            <handleSubcomponents>true</handleSubcomponents>
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <stripNamespaces>true</stripNamespaces>
            <segmentDelimiter>\r</segmentDelimiter>
            <convertLineBreaks>true</convertLineBreaks>
          </serializationProperties>
          <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.7.0">
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <segmentDelimiter>\r</segmentDelimiter>
          </deserializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.7.0">
            <splitType>MSH_Segment</splitType>
            <batchScript></batchScript>
          </batchProperties>
          <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.7.0">
            <segmentDelimiter>\r</segmentDelimiter>
            <successfulACKCode>AA</successfulACKCode>
            <successfulACKMessage></successfulACKMessage>
            <errorACKCode>AE</errorACKCode>
            <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
            <rejectedACKCode>AR</rejectedACKCode>
            <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
            <msh15ACKAccept>false</msh15ACKAccept>
            <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
          </responseGenerationProperties>
          <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.7.0">
            <successfulACKCode>AA,CA</successfulACKCode>
            <errorACKCode>AE,CE</errorACKCode>
            <rejectedACKCode>AR,CR</rejectedACKCode>
            <validateMessageControlId>true</validateMessageControlId>
            <originalMessageControlId>Destination_Encoded</originalMessageControlId>
            <originalIdMapVariable></originalIdMapVariable>
          </responseValidationProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.7.0">
        <elements/>
        <inboundDataType>HL7V2</inboundDataType>
        <outboundDataType>HL7V2</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.7.0">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.7.0">
            <handleRepetitions>true</handleRepetitions>
            <handleSubcomponents>true</handleSubcomponents>
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <stripNamespaces>true</stripNamespaces>
            <segmentDelimiter>\r</segmentDelimiter>
            <convertLineBreaks>true</convertLineBreaks>
          </serializationProperties>
          <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.7.0">
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <segmentDelimiter>\r</segmentDelimiter>
          </deserializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.7.0">
            <splitType>MSH_Segment</splitType>
            <batchScript></batchScript>
          </batchProperties>
          <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.7.0">
            <segmentDelimiter>\r</segmentDelimiter>
            <successfulACKCode>AA</successfulACKCode>
            <successfulACKMessage></successfulACKMessage>
            <errorACKCode>AE</errorACKCode>
            <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
            <rejectedACKCode>AR</rejectedACKCode>
            <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
            <msh15ACKAccept>false</msh15ACKAccept>
            <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
          </responseGenerationProperties>
          <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.7.0">
            <successfulACKCode>AA,CA</successfulACKCode>
            <errorACKCode>AE,CE</errorACKCode>
            <rejectedACKCode>AR,CR</rejectedACKCode>
            <validateMessageControlId>true</validateMessageControlId>
            <originalMessageControlId>Destination_Encoded</originalMessageControlId>
            <originalIdMapVariable></originalIdMapVariable>
          </responseValidationProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.7.0">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.7.0">
            <handleRepetitions>true</handleRepetitions>
            <handleSubcomponents>true</handleSubcomponents>
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <stripNamespaces>true</stripNamespaces>
            <segmentDelimiter>\r</segmentDelimiter>
            <convertLineBreaks>true</convertLineBreaks>
          </serializationProperties>
          <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.7.0">
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <segmentDelimiter>\r</segmentDelimiter>
          </deserializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.7.0">
            <splitType>MSH_Segment</splitType>
            <batchScript></batchScript>
          </batchProperties>
          <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.7.0">
            <segmentDelimiter>\r</segmentDelimiter>
            <successfulACKCode>AA</successfulACKCode>
            <successfulACKMessage></successfulACKMessage>
            <errorACKCode>AE</errorACKCode>
            <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
            <rejectedACKCode>AR</rejectedACKCode>
            <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
            <msh15ACKAccept>false</msh15ACKAccept>
            <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
          </responseGenerationProperties>
          <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.7.0">
            <successfulACKCode>AA,CA</successfulACKCode>
            <errorACKCode>AE,CE</errorACKCode>
            <rejectedACKCode>AR,CR</rejectedACKCode>
            <validateMessageControlId>true</validateMessageControlId>
            <originalMessageControlId>Destination_Encoded</originalMessageControlId>
            <originalIdMapVariable></originalIdMapVariable>
          </responseValidationProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.7.0">
        <elements/>
      </filter>
      <transportName>File Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>false</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.7.0">
      <metaDataId>4</metaDataId>
      <name>Send to HL7 Connect</name>
      <properties class="com.mirth.connect.connectors.tcp.TcpDispatcherProperties" version="3.7.0">
        <pluginProperties/>
        <destinationConnectorProperties version="3.7.0">
          <queueEnabled>true</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>true</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <transmissionModeProperties class="com.mirth.connect.plugins.mllpmode.MLLPModeProperties">
          <pluginPointName>MLLP</pluginPointName>
          <startOfMessageBytes>0B</startOfMessageBytes>
          <endOfMessageBytes>1C0D</endOfMessageBytes>
          <useMLLPv2>false</useMLLPv2>
          <ackBytes>06</ackBytes>
          <nackBytes>15</nackBytes>
          <maxRetries>2</maxRetries>
        </transmissionModeProperties>
        <remoteAddress>127.0.0.1</remoteAddress>
        <remotePort>60500</remotePort>
        <overrideLocalBinding>false</overrideLocalBinding>
        <localAddress>0.0.0.0</localAddress>
        <localPort>0</localPort>
        <sendTimeout>5000</sendTimeout>
        <bufferSize>65536</bufferSize>
        <keepConnectionOpen>false</keepConnectionOpen>
        <checkRemoteHost>false</checkRemoteHost>
        <responseTimeout>5000</responseTimeout>
        <ignoreResponse>false</ignoreResponse>
        <queueOnResponseTimeout>true</queueOnResponseTimeout>
        <dataTypeBinary>false</dataTypeBinary>
        <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
        <template>${message.encodedData}</template>
      </properties>
      <transformer version="3.7.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.7.0">
            <name>LogThisChannel</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>activateChannelLogging();
logger.debug(&apos;My Angus Trace log message&apos;);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.7.0">
            <name>ChangeGender</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>if ($(&apos;Gender&apos;) === &apos;M&apos;){
	logger.info(&apos;Begin set gender&apos;);
	msg[&apos;PID&apos;][&apos;PID.8&apos;][&apos;PID.8.1&apos;] = &apos;F&apos;;
	logger.info(&apos;After set gender&apos;);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64">TVNIfF5+XCZ8U1VQRVItTElTXjIuMTYuODQwLjEuMTEzODgzLjE5LjFeSVNPfE5FSFRBUEFUSF40
MzIxXkFVU05BVEF8Umh1YmFyYi1FTVJeMi4xNi44NDAuMS4xMTM4ODMuMTkuNC4yXklTT3xORUhU
QUhPU1BeMi4xNi44NDAuMS4xMTM4ODMuMTkuNV5JU098MjAxNTA0MTAxMTIwKzEwMDB8fE9SVV5S
MDFeT1JVX1IwMXxQMDAwMDA1MTUwNDEwMjMzMTA3MHxQfDIuNHx8fEFMfE5FfEFVU3w4ODU5LzEK
UElEfDF8fDIxNDIzNjNeXl5ORUhUQUhPU1BeTVJ+NjE0MDUyMzA5NDFeXl5BVVNISUNeTUN+V0Ex
MjM0NTZCXl5eQVVTRFZBXkRWR344MDAzNjA4ODMzMzU3MzYxXl5eQVVTSElDXk5JfHxQYXRpZW50
U3VybmFtZU9uZV5GaXJzdG5hbWVPbmVeTWlkZGxlTmFtZU9uZV5TdWZpeE9uZV5QcmVmaXhPbmVe
Xkx+UGF0aWVudFN1cm5hbWVUd29eRmlyc3RuYW1lVHdvXk1pZGRsZU5hbWVUd29eU3VmaXhUd29e
UHJlZml4VHdvXl5NfHwxOTQ1MDYyNDEwMzF8TXx8fFVuaXQgMV4xMTEgTmVodGEgU3RyZWV0XkJy
aXNiYW5lXl40MDAwXkFVU15IflVuaXQgMl4yMjIgTmVodGFUd28gU3RyZWV0XkJyaXNiYW5lXl40
MDAwXkFVU15CfHxeUFJOXlBIXl5eXjkzMjM1NjE1fF5XUE5eQ1BeXl5eMDQxNDc3ODM0MQpQVjF8
MXxPfFdhcmQxXlJvb21FOF5CZWQxMF5ORUhUQUhPU1AmMi4xNi44NDAuMS4xMTM4ODMuMTkuNSZJ
U098fHx8QUJDQl5EckFTdXJuYW1lXkRyQXR0ZW5kaW5nXl5eRHJeXl5TVVBFUi1MSVN+MTIzNDU2
XkRyQVN1cm5hbWVeRHJBdHRlbmRpbmdeXl5Ecl5eXk5FSFRBSE9TUH4yMzA0MjI3Rl5EckFTdXJu
YW1lXkRyQXR0ZW5kaW5nXl5eRHJeXl5BVVNISUNQUnxISUpLXkRyQVN1cm5hbWVeRHJSZWZlcnJp
bmdeXl5Ecl5eXlNVUEVSLUxJU344NTg1OTVeRHJBU3VybmFtZV5EclJlZmVycmluZ15eXkRyXl5e
TkVIVEFIT1NQfjI5MjkwMTZGXkRyQVN1cm5hbWVeRHJSZWZlcnJpbmdeXl5Ecl5eXkFVU0hJQ1BS
Ck9SQ3xSRXwxMTIyMzNeUmh1YmFyYk9yZGVyc14yLjE2Ljg0MC4xLjExMzg4My4xOS40LjEuNV5J
U098MTVQMDAwMDA1LTEyMzQ1Nl5TVVBFUi1MSVNeMi4xNi44NDAuMS4xMTM4ODMuMTkuMS4yXklT
T3w0NDU1NjY3N15SaHViYXJiT3JkZXJzR3JvdXBJRF4yLjE2Ljg0MC4xLjExMzg4My4xOS40LjEu
NF5JU098Q018fHx8MjAxNTA0MTAwODAwKzEwMDB8fHxERlRSXkRyQlN1cm5hbWVeRHJPcmRlcmlu
Z15eXkRyXl5eU1VQRVItTElTfjk1ODY3OF5EckJTdXJuYW1lXkRyT3JkZXJpbmdeXl5Ecl5eXk5F
SFRBSE9TUH40MzIyNTgxQl5EckJTdXJuYW1lXkRyT3JkZXJpbmdeXl5Ecl5eXkFVU0hJQ1BSfjgw
MDM2MTQ4OTk5OTk5OTdeRHJCU3VybmFtZV5Eck9yZGVyaW5nXl5eRHJeXl5BVVNISUNeXl5eXk5Q
SXx8XldQTl5QSF5eXl4wODkzNDEyMDQxfDIwMTUwNDEwMDczMCsxMDAwCk9CUnwxfDExMjIzM15S
aHViYXJiT3JkZXJzXjIuMTYuODQwLjEuMTEzODgzLjE5LjQuMS41XklTT3wxNVAwMDAwMDUtMTIz
NDU2XlNVUEVSLUxJU14yLjE2Ljg0MC4xLjExMzg4My4xOS4xLjJeSVNPfDI2NjA0MDA3XkNvbXBs
ZXRlIGJsb29kIGNvdW50XlNDVF5GQkVeRnVsbCBCbG9vZCBDb3VudF5TVVBFUi1MSVN8fHwyMDE1
MDQxMDA5MzArMTAwMHx8fHx8fFBhdGllbnQgaGFzIGEgaGlzdG9yeSBvZiBzZXZlcmUgZ291dCBj
YXVzZWQgYnkgcmh1YmFyYi58MjAxNTA0MTAxMTAwKzEwMDB8fERGVFJeRHJCU3VybmFtZV5Eck9y
ZGVyaW5nXl5eRHJeXl5TVVBFUi1MSVN+OTU4Njc4XkRyQlN1cm5hbWVeRHJPcmRlcmluZ15eXkRy
Xl5eTkVIVEFIT1NQfjQzMjI1ODFCXkRyQlN1cm5hbWVeRHJPcmRlcmluZ15eXkRyXl5eQVVTSElD
UFJ+ODAwMzYxNDg5OTk5OTk5N15EckJTdXJuYW1lXkRyT3JkZXJpbmdeXl5Ecl5eXkFVU0hJQ15e
Xl5eTlBJfF5XUE5eUEheXl5eMDg5MzQxMjA0MXx8fENQPU4sRFI9NDMyMjU4MUJ8fDIwMTUwNDEw
MTExNSsxMDAwfHxITXxGfHxeXl4yMDE1MDQxMDA4MDArMTAwMF5eUlR8MjMwNDIyN0ZeRHJDb3B5
QVN1cm5hbWVeRHJDb3B5VG9BXl5eRHJeXl5BVVNISUNQUn4wODEzMjY2SF5EckNvcHlCU3VybmFt
ZV5EckNvcHlUb0JeXl5Ecl5eXkFVU0hJQ1BSfjQ2MjgzNjFCXkRyQ29weUNTdXJuYW1lXkRyQ29w
eVRvQ15eXkRyXl5eQVVTSElDUFJ8fHx8RFJQUklIJkRyU3VybmFtZSZQcmluY2lwYWxSZXN1bHRJ
bnRlcnByZXRlckhhZW0mJiZEUiYmJlNVUEVSLUxJUwpPQlh8MXxOTXw3MTgtN15IZW1vZ2xvYmlu
XkxOXkhCXkhhZW1vZ2xvYmluXk5FSFRBUEFUSHx8MTQ1fGcvTF5eSVNPK3wxMzAtMTgwfHx8fEZ8
fHwyMDE1MDQxMDA5MzArMTAwMHwiInxSTzU2XlN1cm5hbWVSZXNwb25zaWJsZU9ic2VydmVyXkdp
dmVubmFtZV5eXl5eXlNVUEVSLUxJUwpPQlh8MnxOTXw3ODktOF5Fcnl0aHJvY3l0ZXNeTE5eUkND
XlJlZCBDZWxsIENvdW50Xk5FSFRBUEFUSHx8NS4zMHx4MTBcU1wxMi9MXl5JU08rfDQuNTAtNi41
MHx8fHxGfHx8MjAxNTA0MTAwOTMwKzEwMDB8IiJ8Uk81Nl5TdXJuYW1lUmVzcG9uc2libGVPYnNl
cnZlcl5HaXZlbm5hbWVeXl5eXl5TVVBFUi1MSVMKT0JYfDN8Tk18NDU0NC0zXkhlbWF0b2NyaXRe
TE5eSENUXkhDVF5ORUhUQVBBVEh8fDAuNDN8TC9MXl5JU08rfDAuNDAtMC41NHx8fHxGfHx8MjAx
NTA0MTAwOTMwKzEwMDB8IiJ8Uk81Nl5TdXJuYW1lUmVzcG9uc2libGVPYnNlcnZlcl5HaXZlbm5h
bWVeXl5eXl5TVVBFUi1MSVMKT0JYfDR8Tk18Xl5eTUNWXk1DVl5ORUhUQVBBVEh8fDgxfGZMXl5J
U08rfDgwLTk2fHx8fEZ8fHwyMDE1MDQxMDA5MzArMTAwMHwiInxSTzU2XlN1cm5hbWVSZXNwb25z
aWJsZU9ic2VydmVyXkdpdmVubmFtZV5eXl5eXlNVUEVSLUxJUwpPQlh8NXxOTXxeXl5NQ0heTUNI
Xk5FSFRBUEFUSHx8MjcuNHxwZ15eSVNPK3wyNC4wLTMyLjB8fHx8Rnx8fDIwMTUwNDEwMDkzMCsx
MDAwfCIifFJPNTZeU3VybmFtZVJlc3BvbnNpYmxlT2JzZXJ2ZXJeR2l2ZW5uYW1lXl5eXl5eU1VQ
RVItTElTCk9CWHw2fE5NfF5eXk1DSENeTUNIQ15ORUhUQVBBVEh8fDMzOHxnL0xeXklTTyt8MzIw
LTM2MHx8fHxGfHx8MjAxNTA0MTAwOTMwKzEwMDB8IiJ8Uk81Nl5TdXJuYW1lUmVzcG9uc2libGVP
YnNlcnZlcl5HaXZlbm5hbWVeXl5eXl5TVVBFUi1MSVMKT0JYfDd8Tk18Xl5eUExBVF5QbGF0ZWxl
dF5ORUhUQVBBVEh8fDE5OHx4MTBcU1w5L0xeXklTTyt8MTUwLTQwMHx8fHxGfHx8MjAxNTA0MTAw
OTMwKzEwMDB8IiJ8Uk81Nl5TdXJuYW1lUmVzcG9uc2libGVPYnNlcnZlcl5HaXZlbm5hbWVeXl5e
Xl5TVVBFUi1MSVMKT0JYfDh8Tk18Xl5eV0NDXldoaXRlIENlbGwgQ291bnReTkVIVEFQQVRIfHwx
Mi4xfHgxMFxTXDkvTF5eSVNPK3w0LjAtMTEuMHxIfHx8Rnx8fDIwMTUwNDEwMDkzMCsxMDAwfCIi
fFJPNTZeU3VybmFtZVJlc3BvbnNpYmxlT2JzZXJ2ZXJeR2l2ZW5uYW1lXl5eXl5eU1VQRVItTElT
Ck9CWHw5fE5NfF5eXk5FVVRTXk5ldXRyb3BoaWxzXk5FSFRBUEFUSHx8OS4zfHgxMFxTXDkvTF5e
SVNPK3wyLjAtNy41fEh8fHxGfHx8MjAxNTA0MTAwOTMwKzEwMDB8IiJ8Uk81Nl5TdXJuYW1lUmVz
cG9uc2libGVPYnNlcnZlcl5HaXZlbm5hbWVeXl5eXl5TVVBFUi1MSVMKT0JYfDEwfE5NfF5eXkxZ
TVBIT1NeTHltcGhvY3l0ZXNeTkVIVEFQQVRIfHwyLjF8eDEwXFNcOS9MXl5JU08rfDEuMC00LjB8
fHx8Rnx8fDIwMTUwNDEwMDkzMCsxMDAwfCIifFJPNTZeU3VybmFtZVJlc3BvbnNpYmxlT2JzZXJ2
ZXJeR2l2ZW5uYW1lXl5eXl5eU1VQRVItTElTCk9CWHwxMXxOTXxeXl5NT05PU15Nb25vY3l0ZXNe
TkVIVEFQQVRIfHwwLjd8eDEwXFNcOS9MXl5JU08rfDAuMS0wLjh8fHx8Rnx8fDIwMTUwNDEwMDkz
MCsxMDAwfCIifFJPNTZeU3VybmFtZVJlc3BvbnNpYmxlT2JzZXJ2ZXJeR2l2ZW5uYW1lXl5eXl5e
U1VQRVItTElTCk9CWHwxMnxOTXxeXl5FT1NeRW9zaW5vcGhpbHNeTkVIVEFQQVRIfHwwLjB8eDEw
XFNcOS9MXl5JU08rfDAuMC0wLjR8fHx8Rnx8fDIwMTUwNDEwMDkzMCsxMDAwfCIifFJPNTZeU3Vy
bmFtZVJlc3BvbnNpYmxlT2JzZXJ2ZXJeR2l2ZW5uYW1lXl5eXl5eU1VQRVItTElTCk9CWHwxM3xO
TXxeXl5CQVNPU15CYXNvcGhpbHNeTkVIVEFQQVRIfHwwLjB8eDEwXFNcOS9MXl5JU08rfDAuMC0w
LjJ8fHx8Rnx8fDIwMTUwNDEwMDkzMCsxMDAwfCIifFJPNTZeU3VybmFtZVJlc3BvbnNpYmxlT2Jz
ZXJ2ZXJeR2l2ZW5uYW1lXl5eXl5eU1VQRVItTElT</inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>HL7V2</inboundDataType>
        <outboundDataType>HL7V2</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.7.0">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.7.0">
            <handleRepetitions>true</handleRepetitions>
            <handleSubcomponents>true</handleSubcomponents>
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <stripNamespaces>true</stripNamespaces>
            <segmentDelimiter>\r</segmentDelimiter>
            <convertLineBreaks>true</convertLineBreaks>
          </serializationProperties>
          <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.7.0">
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <segmentDelimiter>\r</segmentDelimiter>
          </deserializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.7.0">
            <splitType>MSH_Segment</splitType>
            <batchScript></batchScript>
          </batchProperties>
          <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.7.0">
            <segmentDelimiter>\r</segmentDelimiter>
            <successfulACKCode>AA</successfulACKCode>
            <successfulACKMessage></successfulACKMessage>
            <errorACKCode>AE</errorACKCode>
            <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
            <rejectedACKCode>AR</rejectedACKCode>
            <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
            <msh15ACKAccept>false</msh15ACKAccept>
            <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
          </responseGenerationProperties>
          <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.7.0">
            <successfulACKCode>AA,CA</successfulACKCode>
            <errorACKCode>AE,CE</errorACKCode>
            <rejectedACKCode>AR,CR</rejectedACKCode>
            <validateMessageControlId>true</validateMessageControlId>
            <originalMessageControlId>Destination_Encoded</originalMessageControlId>
            <originalIdMapVariable></originalIdMapVariable>
          </responseValidationProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.7.0">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.7.0">
            <handleRepetitions>true</handleRepetitions>
            <handleSubcomponents>true</handleSubcomponents>
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <stripNamespaces>true</stripNamespaces>
            <segmentDelimiter>\r</segmentDelimiter>
            <convertLineBreaks>true</convertLineBreaks>
          </serializationProperties>
          <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.7.0">
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <segmentDelimiter>\r</segmentDelimiter>
          </deserializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.7.0">
            <splitType>MSH_Segment</splitType>
            <batchScript></batchScript>
          </batchProperties>
          <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.7.0">
            <segmentDelimiter>\r</segmentDelimiter>
            <successfulACKCode>AA</successfulACKCode>
            <successfulACKMessage></successfulACKMessage>
            <errorACKCode>AE</errorACKCode>
            <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
            <rejectedACKCode>AR</rejectedACKCode>
            <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
            <msh15ACKAccept>false</msh15ACKAccept>
            <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
          </responseGenerationProperties>
          <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.7.0">
            <successfulACKCode>AA,CA</successfulACKCode>
            <errorACKCode>AE,CE</errorACKCode>
            <rejectedACKCode>AR,CR</rejectedACKCode>
            <validateMessageControlId>true</validateMessageControlId>
            <originalMessageControlId>Destination_Encoded</originalMessageControlId>
            <originalIdMapVariable></originalIdMapVariable>
          </responseValidationProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.7.0">
        <elements/>
        <inboundDataType>HL7V2</inboundDataType>
        <outboundDataType>HL7V2</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.7.0">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.7.0">
            <handleRepetitions>true</handleRepetitions>
            <handleSubcomponents>true</handleSubcomponents>
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <stripNamespaces>true</stripNamespaces>
            <segmentDelimiter>\r</segmentDelimiter>
            <convertLineBreaks>true</convertLineBreaks>
          </serializationProperties>
          <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.7.0">
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <segmentDelimiter>\r</segmentDelimiter>
          </deserializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.7.0">
            <splitType>MSH_Segment</splitType>
            <batchScript></batchScript>
          </batchProperties>
          <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.7.0">
            <segmentDelimiter>\r</segmentDelimiter>
            <successfulACKCode>AA</successfulACKCode>
            <successfulACKMessage></successfulACKMessage>
            <errorACKCode>AE</errorACKCode>
            <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
            <rejectedACKCode>AR</rejectedACKCode>
            <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
            <msh15ACKAccept>false</msh15ACKAccept>
            <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
          </responseGenerationProperties>
          <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.7.0">
            <successfulACKCode>AA,CA</successfulACKCode>
            <errorACKCode>AE,CE</errorACKCode>
            <rejectedACKCode>AR,CR</rejectedACKCode>
            <validateMessageControlId>true</validateMessageControlId>
            <originalMessageControlId>Destination_Encoded</originalMessageControlId>
            <originalIdMapVariable></originalIdMapVariable>
          </responseValidationProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.7.0">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.7.0">
            <handleRepetitions>true</handleRepetitions>
            <handleSubcomponents>true</handleSubcomponents>
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <stripNamespaces>true</stripNamespaces>
            <segmentDelimiter>\r</segmentDelimiter>
            <convertLineBreaks>true</convertLineBreaks>
          </serializationProperties>
          <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.7.0">
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <segmentDelimiter>\r</segmentDelimiter>
          </deserializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.7.0">
            <splitType>MSH_Segment</splitType>
            <batchScript></batchScript>
          </batchProperties>
          <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.7.0">
            <segmentDelimiter>\r</segmentDelimiter>
            <successfulACKCode>AA</successfulACKCode>
            <successfulACKMessage></successfulACKMessage>
            <errorACKCode>AE</errorACKCode>
            <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
            <rejectedACKCode>AR</rejectedACKCode>
            <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
            <msh15ACKAccept>false</msh15ACKAccept>
            <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
          </responseGenerationProperties>
          <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.7.0">
            <successfulACKCode>AA,CA</successfulACKCode>
            <errorACKCode>AE,CE</errorACKCode>
            <rejectedACKCode>AR,CR</rejectedACKCode>
            <validateMessageControlId>true</validateMessageControlId>
            <originalMessageControlId>Destination_Encoded</originalMessageControlId>
            <originalIdMapVariable></originalIdMapVariable>
          </responseValidationProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.7.0">
        <elements/>
      </filter>
      <transportName>TCP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>false</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.7.0">
      <metaDataId>7</metaDataId>
      <name>Rest</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="3.7.0">
        <pluginProperties/>
        <destinationConnectorProperties version="3.7.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>true</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <host>http://localhost:62386/api/hl7v2</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>post</method>
        <headers class="linked-hash-map">
          <entry>
            <string>Accept</string>
            <list>
              <string>application/json</string>
            </list>
          </entry>
        </headers>
        <parameters class="linked-hash-map"/>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>false</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
        <username></username>
        <password></password>
        <content>${message.transformedData}</content>
        <contentType>application/json</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="3.7.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.7.0">
            <name>Logging</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>activateChannelLogging();</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.7.0">
            <name>Icims</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>var object = {};

//Create JSON Object from HL7 Message.
object.HL7V2Message = connectorMessage.getRawData();

//logger.debug(JSON.stringify(object))

//Create string from JSON Object.
msg = JSON.stringify(object);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>HL7V2</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.7.0">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.7.0">
            <handleRepetitions>true</handleRepetitions>
            <handleSubcomponents>true</handleSubcomponents>
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <stripNamespaces>true</stripNamespaces>
            <segmentDelimiter>\r</segmentDelimiter>
            <convertLineBreaks>true</convertLineBreaks>
          </serializationProperties>
          <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.7.0">
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <segmentDelimiter>\r</segmentDelimiter>
          </deserializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.7.0">
            <splitType>MSH_Segment</splitType>
            <batchScript></batchScript>
          </batchProperties>
          <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.7.0">
            <segmentDelimiter>\r</segmentDelimiter>
            <successfulACKCode>AA</successfulACKCode>
            <successfulACKMessage></successfulACKMessage>
            <errorACKCode>AE</errorACKCode>
            <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
            <rejectedACKCode>AR</rejectedACKCode>
            <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
            <msh15ACKAccept>false</msh15ACKAccept>
            <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
          </responseGenerationProperties>
          <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.7.0">
            <successfulACKCode>AA,CA</successfulACKCode>
            <errorACKCode>AE,CE</errorACKCode>
            <rejectedACKCode>AR,CR</rejectedACKCode>
            <validateMessageControlId>true</validateMessageControlId>
            <originalMessageControlId>Destination_Encoded</originalMessageControlId>
            <originalIdMapVariable></originalIdMapVariable>
          </responseValidationProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.7.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.7.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.7.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.7.0">
            <name></name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var o = JSON.parse(msg);
if (o.success){
     //logger.info(&apos;OK: &apos; + o.errormessage + &apos;, Response:&apos; + $(&apos;responseStatusLine&apos;));
	responseStatus = SENT
} else {
	//logger.info(&apos;ERROR: &apos; + o.errormessage + &apos;, Response:&apos; + $(&apos;responseStatusLine&apos;));
	responseStatus = ERROR;
	responseStatusMessage = o.errorMessage;
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.7.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.7.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.7.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.7.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.7.0">
        <elements/>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
  </destinationConnectors>
  <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
  <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
  <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
  <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
  <properties version="3.7.0">
    <clearGlobalChannelMap>true</clearGlobalChannelMap>
    <messageStorageMode>PRODUCTION</messageStorageMode>
    <encryptData>false</encryptData>
    <removeContentOnCompletion>false</removeContentOnCompletion>
    <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
    <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
    <initialState>STARTED</initialState>
    <storeAttachments>false</storeAttachments>
    <metaDataColumns>
      <metaDataColumn>
        <name>SOURCE</name>
        <type>STRING</type>
        <mappingName>mirth_source</mappingName>
      </metaDataColumn>
      <metaDataColumn>
        <name>TYPE</name>
        <type>STRING</type>
        <mappingName>mirth_type</mappingName>
      </metaDataColumn>
    </metaDataColumns>
    <attachmentProperties version="3.7.0">
      <type>None</type>
      <properties/>
    </attachmentProperties>
    <resourceIds class="linked-hash-map">
      <entry>
        <string>Default Resource</string>
        <string>[Default Resource]</string>
      </entry>
    </resourceIds>
  </properties>
  <exportData>
    <metadata>
      <enabled>true</enabled>
      <lastModified>
        <time>1550587048419</time>
        <timezone>Australia/Brisbane</timezone>
      </lastModified>
      <pruningSettings>
        <pruneMetaDataDays>90</pruneMetaDataDays>
        <pruneContentDays>90</pruneContentDays>
        <archiveEnabled>true</archiveEnabled>
      </pruningSettings>
    </metadata>
    <codeTemplateLibraries>
      <codeTemplateLibrary version="3.7.0">
        <id>0436fbb7-67d6-431b-8e7b-30e41fb02481</id>
        <name>Logging</name>
        <revision>3</revision>
        <lastModified>
          <time>1550563538134</time>
          <timezone>Australia/Brisbane</timezone>
        </lastModified>
        <description>Logging Templates</description>
        <includeNewChannels>true</includeNewChannels>
        <enabledChannelIds>
          <string>b8506c3f-168a-4d79-8e81-4e1fdeca5e99</string>
        </enabledChannelIds>
        <disabledChannelIds/>
        <codeTemplates>
          <codeTemplate version="3.7.0">
            <id>d8ccbe38-c486-4460-bc9b-f8efeeac90a9</id>
            <name>PerChannelLogging</name>
            <revision>3</revision>
            <lastModified>
              <time>1550563296210</time>
              <timezone>Australia/Brisbane</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>CHANNEL_BATCH</contextType>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>CHANNEL_POSTPROCESSOR</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
                <contextType>CHANNEL_DEPLOY</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>CHANNEL_ATTACHMENT</contextType>
                <contextType>CHANNEL_PREPROCESSOR</contextType>
                <contextType>CHANNEL_UNDEPLOY</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	Extends standard logging by adding the channel name to the log entries and creating a separate log file for each channel.
	The general mirth log will still log all messages from all channels.&lt;br/&gt;
	&lt;br/&gt; 
	&lt;i&gt;Channel-centric logging is round robin with 10 backups and 2MB file size. These parameters can be changed via the &lt;u&gt;configuration map&lt;/u&gt; by defining the following parameters:
		&lt;ul&gt;
			&lt;li&gt;&lt;&lt;b&gt;logFile_size&lt;/b&gt; - defines the logfile size (eg. 500KB, 3MB, 1GB; default: &lt;b&gt;2MB&lt;/b&gt;)&lt;/li&gt;
			&lt;li&gt;&lt;&lt;b&gt;logFile_backupFiles&lt;/b&gt; - defines the number of backup files (e.g. 5; default: &lt;b&gt;10&lt;/b&gt;)&lt;/li&gt;
			&lt;li&gt;&lt;&lt;b&gt;logFile_logLevel&lt;/b&gt; - defines the log level (e.g. TRACE, INFO, WARN, ERROR; default: &lt;b&gt;DEBUG&lt;/b&gt;)&lt;/li&gt;
		&lt;/ul&gt;
	&lt;/i&gt;
*/
function activateChannelLogging() {
	if(!channelName){
		channelName = ChannelUtil.getDeployedChannelName(channelId);
	}
	if(logger.getName() == &apos;undefined&apos;){
		return;	
	}
	// only modify the logger once
	if(!logger.getAppender(channelName)){ 
		
		logger = org.apache.log4j.Logger.getLogger({
			&apos;transformer&apos;: channelName + &apos;-transformer&apos;,
			&apos;preprocessor&apos;: channelName + &apos;-preprocessor&apos;,
			&apos;postprocessor&apos;: channelName + &apos;-postprocessor&apos;,
			&apos;deploy&apos;: channelName + &apos;-deploy&apos;,
			&apos;shutdown&apos;: channelName + &apos;-shutdown&apos;,
			&apos;filter&apos;: channelName + &apos;-filter&apos;,
			&apos;db-connector&apos;: channelName + &apos;-db-connector&apos;,
			&apos;js-connector&apos;: channelName + &apos;-js-connector&apos;,
			&apos;attachment&apos;: channelName + &apos;-attachment&apos;,
			&apos;batch&apos;: channelName + &apos;-batch&apos;,
			&apos;response&apos;: channelName + &apos;-response&apos;
		}[logger.getName()]);
		logger.setLevel(org.apache.log4j.Level.toLevel(configurationMap.get(&apos;logFile_logLevel&apos;), org.apache.log4j.Level.DEBUG));
		
		//assign the appender to the Logger
		logger.addAppender(getChannelAppender(channelName));
	}
}

/**
	Provides a rolling file appender for a channel. If it does not yet exist, it will be created.&lt;br/&gt;
	&lt;br/&gt;	
	&lt;i&gt;The following parameters can be changed via the &lt;u&gt;configuration map&lt;/u&gt;:
		&lt;ul&gt;
			&lt;li&gt;&lt;&lt;b&gt;logFile_size&lt;/b&gt; - defines the logfile size (eg. 500KB, 3MB, 1GB; default: &lt;b&gt;2MB&lt;/b&gt;)&lt;/li&gt;
			&lt;li&gt;&lt;&lt;b&gt;logFile_backupFiles&lt;/b&gt; - defines the number of backup files (e.g. 5; default: &lt;b&gt;10&lt;/b&gt;)&lt;/li&gt;
		&lt;/ul&gt;
	&lt;/i&gt;
	
	@param {String} channel - the name of the channel for which the rolling file appender is needed
	@param {Object} segment - The acc segment
	@param {string} messageDbKey - The value of the MSH message to be referenced
	
  	@return The rolling file appender
*/
function getChannelAppender(channel){
	// if the appender not yet exists, create it
	if(!globalMap.get(&apos;logAppender_&apos; + channel)){
		// create a round robin file appender
		var channelAppender = new org.apache.log4j.RollingFileAppender();
		// use the channel name as appender name
		channelAppender.setName(channel);
		// set the max file size
		channelAppender.setMaxFileSize(configurationMap.get(&apos;logFile_size&apos;) ? configurationMap.get(&apos;logFile_size&apos;) : &quot;2MB&quot;);
		// set the max number of backup files
		channelAppender.setMaxBackupIndex(configurationMap.get(&apos;logFile_backupFiles&apos;) ? configurationMap.get(&apos;logFile_backupFiles&apos;) : 10);
		// determine the channelAppender name and location
		channelAppender.setFile(getLoggingPath() + channel + &apos;.log&apos;);
		// define the logging pattern: &lt;Date&gt; &lt;Priority&gt; &lt;Category&gt; &lt;log-Message&gt;
		channelAppender.setLayout(new org.apache.log4j.PatternLayout(&quot;%d %-5p %c: %m%n&quot;));
		// set the logging threshold (trace entries will be ignored)
		channelAppender.setThreshold(org.apache.log4j.Level.DEBUG);
		// if preexisting new log entries will be appended
		channelAppender.setAppend(true);
		// activate configuration
		channelAppender.activateOptions();
		// store the new appender in the channel map
		globalMap.put(&apos;logAppender_&apos; + channel, channelAppender);
	}
	
	return globalMap.get(&apos;logAppender_&apos; + channel);
}

/**
  Determine the logging path that has been defined for log4j
  
  @return The configured logging path
*/
function getLoggingPath(){
	var logPath = &apos;&apos;;
	// get all appenders
	var appenderList =  org.apache.log4j.Logger.getRootLogger().getAllAppenders();
	// iterate over them
	while(appenderList.hasMoreElements()){
		var appender = appenderList.nextElement();
		// and look for a file appender
		if (appender instanceof org.apache.log4j.FileAppender){
			logPath = appender.getFile();
			// file appender was found, extract path
			var index = (logPath.lastIndexOf(&apos;/&apos;) != -1) ? logPath.lastIndexOf(&apos;/&apos;) : logPath.lastIndexOf(&apos;\\&apos;);
			logPath = logPath.substring(0, index + 1);
			break;
		}
	}	

	return logPath;
}

// automatically call the function
activateChannelLogging();</code>
            </properties>
          </codeTemplate>
        </codeTemplates>
      </codeTemplateLibrary>
    </codeTemplateLibraries>
  </exportData>
</channel>